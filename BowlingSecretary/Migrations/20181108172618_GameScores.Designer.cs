// <auto-generated />
using System;
using BowlingSecretary.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BowlingSecretary.Migrations
{
    [DbContext(typeof(BowlingSecretaryContext))]
    [Migration("20181108172618_GameScores")]
    partial class GameScores
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BowlingSecretary.Models.Bowler", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CurrentAverage");

                    b.Property<int?>("LeagueID");

                    b.Property<string>("Name");

                    b.Property<int?>("TeamID");

                    b.HasKey("ID");

                    b.HasIndex("LeagueID");

                    b.HasIndex("TeamID");

                    b.ToTable("Bowler");
                });

            modelBuilder.Entity("BowlingSecretary.Models.BowlerScore", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BowlerID");

                    b.Property<int?>("GameID");

                    b.Property<int>("Handicap");

                    b.Property<int>("Score");

                    b.Property<int?>("TeamID");

                    b.HasKey("ID");

                    b.HasIndex("BowlerID");

                    b.HasIndex("GameID");

                    b.HasIndex("TeamID");

                    b.ToTable("BowlerScore");
                });

            modelBuilder.Entity("BowlingSecretary.Models.Game", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GameNumber");

                    b.Property<bool>("IsPositionRound");

                    b.Property<bool>("IsProcessed");

                    b.Property<int>("LaneSet");

                    b.Property<int>("Round");

                    b.Property<int?>("Team1ID");

                    b.Property<int?>("Team2ID");

                    b.HasKey("ID");

                    b.HasIndex("Team1ID");

                    b.HasIndex("Team2ID");

                    b.ToTable("Game");
                });

            modelBuilder.Entity("BowlingSecretary.Models.League", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BowlersPerTeam");

                    b.Property<string>("Location");

                    b.Property<string>("Name");

                    b.Property<int>("NumberOfLanes");

                    b.Property<int>("PositionRounds");

                    b.HasKey("ID");

                    b.ToTable("League");
                });

            modelBuilder.Entity("BowlingSecretary.Models.Team", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("LeagueID");

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.HasIndex("LeagueID");

                    b.ToTable("Team");
                });

            modelBuilder.Entity("BowlingSecretary.Models.Bowler", b =>
                {
                    b.HasOne("BowlingSecretary.Models.League", "League")
                        .WithMany()
                        .HasForeignKey("LeagueID");

                    b.HasOne("BowlingSecretary.Models.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamID");
                });

            modelBuilder.Entity("BowlingSecretary.Models.BowlerScore", b =>
                {
                    b.HasOne("BowlingSecretary.Models.Bowler", "Bowler")
                        .WithMany()
                        .HasForeignKey("BowlerID");

                    b.HasOne("BowlingSecretary.Models.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameID");

                    b.HasOne("BowlingSecretary.Models.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamID");
                });

            modelBuilder.Entity("BowlingSecretary.Models.Game", b =>
                {
                    b.HasOne("BowlingSecretary.Models.Team", "Team1")
                        .WithMany()
                        .HasForeignKey("Team1ID");

                    b.HasOne("BowlingSecretary.Models.Team", "Team2")
                        .WithMany()
                        .HasForeignKey("Team2ID");
                });

            modelBuilder.Entity("BowlingSecretary.Models.Team", b =>
                {
                    b.HasOne("BowlingSecretary.Models.League", "League")
                        .WithMany()
                        .HasForeignKey("LeagueID");
                });
#pragma warning restore 612, 618
        }
    }
}
